# adapted from: https://github.com/sjevs/cloudformation-s3-static-website-with-cloudfront-and-route-53/blob/master/s3-static-website-with-cloudfront-and-route-53.yaml
# Adapted from: https://github.com/aws-samples/aws-codebuild-samples/blob/master/cloudformation/continuous-integration-pull-request-checks.yml

# Note (Eli 5/3/30): you must connect your AWS account to your github account using OAuth manually before this will work (one-time). To do so, just attempt to create a CodeBuild project through the console--you don't need to finish creating it, just get to the point where you've created the OAuth connection.

# to create: aws cloudformation deploy --stack-name=elifine-com --parameter-overrides FullDomainName=www.elifine.com AcmCertificateArn=FILL_THIS_IN --template-file=cloud_formation.yaml --capabilities CAPABILITY_NAMED_IAM

AWSTemplateFormatVersion: "2010-09-09"
Description: Creates an S3 bucket configured for hosting a static website
Parameters:
  # DomainName:
  #   Type: String
  #   Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. jevsejev.io
  #   AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
  #   ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Description: The full domain name e.g. www.jevsejev.io
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  AcmCertificateArn:
    Type: String
    Description: the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate.
    AllowedPattern: "arn:aws:acm:.*"
# Mappings:
#   RegionMap:
#     us-east-1:
#       S3HostedZoneId: Z3AQBSTGFYJSTF
#     us-west-1:
#       S3HostedZoneId: Z2F56UZL2M1ACD
#     us-west-2:
#       S3HostedZoneId: Z3BJ6K6RIION7M
#     eu-west-1:
#       S3HostedZoneId: Z1BKCTXD74EZPE
#     ap-southeast-1:
#       S3HostedZoneId: Z3O0J2DXBE1FTB
#     ap-southeast-2:
#       S3HostedZoneId: Z1WCIGYICN2BYD
#     ap-northeast-1:
#       S3HostedZoneId: Z2M4EHUR26P7ZW
#     sa-east-1:
#       S3HostedZoneId: Z31GFT0UA1I2HV
Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: "FullDomainName"
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
    DeletionPolicy: Retain
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: "WebsiteBucket"
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: "WebsiteBucket"
                  - "/*"
  WebsiteCloudfront:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - WebsiteBucket
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
          - DomainName:
              Fn::Select:
                - 2
                - Fn::Split:
                    - "/"
                    - Fn::GetAtt: [WebsiteBucket, WebsiteURL]
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: "80"
              HTTPSPort: "443"
              OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: "http2"
        DefaultRootObject: index.html
        Aliases:
          - Ref: "FullDomainName"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: "AcmCertificateArn"
          SslSupportMethod: sni-only
  # WebsiteDNSName:
  #   Type: AWS::Route53::RecordSetGroup
  #   Properties:
  #     HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
  #     RecordSets:
  #     - Name: !Ref 'FullDomainName'
  #       Type: A
  #       AliasTarget:
  #         HostedZoneId: Z2FDTNDATAQYW2
  #         DNSName: !GetAtt [WebsiteCloudfront, DomainName]
  CodeBuildPolicy:
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:PutObject
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:DeleteObject
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ":"
                  - - "arn"
                    - "aws"
                    - "s3"
                    - ""
                    - ""
                    - Ref: "FullDomainName"
              - Fn::Join:
                  - ":"
                  - - "arn"
                    - "aws"
                    - "s3"
                    - ""
                    - ""
                    - Fn::Join:
                        - "/"
                        - - Ref: "FullDomainName"
                          - "*"

      PolicyName:
        Fn::Join:
          - "-"
          - - Ref: "AWS::StackName"
            - CodeBuildPolicy
      Roles:
        - Ref: "CodeBuildRole"
    Type: AWS::IAM::Policy

  CodeBuildProject:
    DependsOn:
      - CodeBuildPolicy
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Description:
        Fn::Join:
          - ""
          - - "CodeBuild Project for "
            - Ref: "AWS::StackName"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0-20.03.13
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: DESTINATION_BUCKET_NAME
            Type: PLAINTEXT
            Value:
              Ref: "FullDomainName"
          - Name: DEPLOYMENT_STAGE
            Type: PLAINTEXT
            Value: "TESTING"
      Name:
        Ref: "AWS::StackName"
      ServiceRole:
        Ref: "CodeBuildRole"
      Source:
        Auth:
          Type: "OAUTH"
        GitCloneDepth: 1

        ReportBuildStatus: True
        Location: "https://github.com/eli88fine/elifine-com"
        Type: GITHUB

      QueuedTimeoutInMinutes: 10
      TimeoutInMinutes: 30
    Type: AWS::CodeBuild::Project

  CodeBuildRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Path: /
      RoleName:
        Fn::Join:
          - "-"
          - - Ref: "AWS::StackName"
            - CodeBuild
    Type: AWS::IAM::Role

Outputs:
  BucketName:
    Value:
      Ref: "WebsiteBucket"
    Description: Name of S3 bucket to hold website content
  CloudfrontEndpoint:
    Value:
      Fn::GetAtt:
        - WebsiteCloudfront
        - DomainName
    Description: Endpoint for Cloudfront distribution
  FullDomain:
    Value:
      Ref: "FullDomainName"
    Description: Full DomainName
